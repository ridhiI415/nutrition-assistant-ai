{
  "name": "Nutrition Agent-action",
  "type": "action",
  "counts": {
    "actions": 5,
    "intents": 2,
    "entities": 20,
    "data_types": 3,
    "collections": 0,
    "global_variables": 4
  },
  "status": "Available",
  "language": "en",
  "skill_id": "30ad3b59-40a3-405b-af9e-2c60df132334",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_275",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "üëã Hello! I‚Äôm your AI Nutrition Assistant, here to help you eat smarter and feel better.\nI can create personalized meal plans, suggest healthy recipes, explain nutrition, and more.\nTo begin, you can tell me something like:\n\n\n  - ‚ÄúI want a meal plan‚Äù\n  - ‚ÄúI have lactose intolerance‚Äù\n  - ‚ÄúSuggest me a high-protein breakfast‚Äù\n\n‚ú® How can I help you today?\n\nmove to next step:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "‚ÄúI want a meal plan‚Äù ",
                      "value": {
                        "input": {
                          "text": "‚ÄúI want a meal plan‚Äù "
                        }
                      }
                    },
                    {
                      "label": "\"I have lactose intolerance‚Äùn ",
                      "value": {
                        "input": {
                          "text": "\"I have lactose intolerance‚Äùn "
                        }
                      }
                    },
                    {
                      "label": "\" How can I help you today?",
                      "value": {
                        "input": {
                          "text": "\" How can I help you today?"
                        }
                      }
                    },
                    {
                      "label": "\"Feedback on Meal\"",
                      "value": {
                        "input": {
                          "text": "\"Feedback on Meal\""
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_27230",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_275",
            "next_step": "step_480"
          },
          {
            "step": "step_480",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Great! I‚Äôll help you create a personalized meal plan.\nTo get started, could you please share a few details:\n\n\n  - Your age and gender\n  - Any health goals (e.g., weight loss, muscle gain, maintaining energy)?\n  - Dietary preferences (e.g., vegetarian, vegan, non-veg)?\n  - Any allergies or restrictions?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_480",
            "condition": {
              "eq": [
                {
                  "variable": "step_275"
                },
                {
                  "value": "‚ÄúI want a meal plan‚Äù ",
                  "from_entity": "entity_27230"
                }
              ]
            },
            "next_step": "step_603"
          },
          {
            "step": "step_603",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thanks for letting me know. I‚Äôll make sure to avoid all dairy-based ingredients like milk, cheese, and butter in your meal suggestions.\n\nWould you prefer plant-based alternatives like:\n\n\n  - Almond milk\n  - Soy yogurt\n  - Coconut-based cheese?\n\nAlso, do you want your full meal plan to be 100% dairy-free, or just specific meals like breakfast and snacks?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_603",
            "condition": {
              "eq": [
                {
                  "variable": "step_275"
                },
                {
                  "value": "\"I have lactose intolerance‚Äùn ",
                  "from_entity": "entity_27230"
                }
              ]
            },
            "next_step": "step_602"
          },
          {
            "step": "step_602",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Suggest me a high-protein breakfast‚Äù**"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Scrambled tofu with vegetables  1 slice multigrain toast",
                      "value": {
                        "input": {
                          "text": "Scrambled tofu with vegetables  1 slice multigrain toast"
                        }
                      }
                    },
                    {
                      "label": "Greek yogurt (lactose-free)  Chia seeds, flaxseeds, and walnuts",
                      "value": {
                        "input": {
                          "text": "Greek yogurt (lactose-free)  Chia seeds, flaxseeds, and walnuts"
                        }
                      }
                    },
                    {
                      "label": "Moong dal cheela (Indian lentil pancakes)  Mint chutney",
                      "value": {
                        "input": {
                          "text": "Moong dal cheela (Indian lentil pancakes)  Mint chutney"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_7566",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_602",
            "condition": {
              "eq": [
                {
                  "variable": "step_275"
                },
                {
                  "value": "\" How can I help you today?",
                  "from_entity": "entity_27230"
                }
              ]
            },
            "next_step": "step_330"
          },
          {
            "step": "step_330",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "<br />\n\n\n\n|‚ÄúThat lunch was too heavy.‚Äù\n‚ÄúI didn‚Äôt like the tofu dish.‚Äù\n\n|"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_330",
            "condition": {
              "eq": [
                {
                  "variable": "step_275"
                },
                {
                  "value": "\"Feedback on Meal\"",
                  "from_entity": "entity_27230"
                }
              ]
            },
            "next_step": "step_329"
          },
          {
            "step": "step_329",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "üß† ***Got it! To personalize your plan, I need a few quick details:***\n\n**1Ô∏è‚É£ What is your age and gender?\n2Ô∏è‚É£ Do you have any medical conditions or allergies?\n3Ô∏è‚É£ What are your food preferences (e.g., vegetarian, gluten-free)?\n4Ô∏è‚É£ What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet?\n5Ô∏è‚É£ Any specific cuisines or ingredients to include or avoid?**\n\nLet‚Äôs get started!"
                          },
                          {
                            "skill_variable": "ques"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "response_type": "response_from_data_type",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": "age- 19\nmedical condition/ alergies- diabetic/mushroom\ngoal- weight loss/ weight gain\nspecific cuisines- spinich salad"
                  },
                  "skill_variable": "personalise"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "data_type": "data-type_38722",
              "max_tries": 1
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_329",
            "next_step": "step_767"
          },
          {
            "step": "step_767",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I‚Äôm 22 years old and female.\nThanks! Got it ‚Äî a 22-year-old female. I‚Äôll tailor your nutrition and portion sizes accordingly. üòä"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_329"
                  },
                  "skill_variable": "assist"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_42565",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_767",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "What is your age and gender? ",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_688"
          },
          {
            "step": "step_688",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Do you have any medical conditions or allergies?**"
                          }
                        ]
                      }
                    },
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "What are your food preferences (e.g., vegetarian, gluten-free)?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_688",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "Do you have any medical conditions or allergies?  ",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_184"
          },
          {
            "step": "step_184",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I‚Äôm lactose intolerant and have mild PCOS.\nThank you for sharing. I‚Äôll make sure your meal plan avoids all dairy products and supports hormonal balance‚Äîespecially for PCOS, with low-GI and anti-inflammatory foods."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_184",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "Do you have any medical conditions or allergies?  ",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_921"
          },
          {
            "step": "step_921",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I prefer vegetarian meals, and I avoid gluten.\nUnderstood! I‚Äôll build a 100% vegetarian, gluten-free plan‚Äîusing ingredients like quinoa, lentils, tofu, and fresh vegetables. üç≤üåø"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_921",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "What are your food preferences (e.g., vegetarian, gluten-free)?",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_896"
          },
          {
            "step": "step_896",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "My goal is weight loss and improving energy levels.\nGreat! I‚Äôll focus on a calorie-controlled, high-fiber, and protein-rich plan that keeps you full and energized throughout the day‚Äîwithout crash dieting. üí™ü•ó"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_896",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? ",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_710"
          },
          {
            "step": "step_710",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I love Indian food, but I don‚Äôt like mushrooms or eggplant."
                          },
                          {
                            "skill_variable": "assist"
                          },
                          {
                            "scalar": "\nPerfect! I‚Äôll include more Indian-style meals like dal, cheelas, and sabzi using your preferred ingredients‚Äîand skip mushrooms and eggplants completely."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 1,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_710",
            "condition": {
              "eq": [
                {
                  "variable": "step_329"
                },
                {
                  "value": "Any specific cuisines or ingredients to include or avoid?",
                  "from_entity": "entity_30991"
                }
              ]
            },
            "next_step": "step_496"
          },
          {
            "step": "step_496",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "### **End or Loop**\n```\nüîÅ Would you like to add this to your meal plan or get another suggestion?\n\nYou can also say:  \n- ‚ÄúMake this my breakfast for tomorrow‚Äù  \n- ‚ÄúGive me a grocery list‚Äù  \n- ‚ÄúShow nutrition details‚Äù"
                          },
                          {
                            "skill_variable": "ques"
                          },
                          {
                            "scalar": "$\n```"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "‚ÄúMake this my breakfast for tomorrow‚Äù",
                      "value": {
                        "input": {
                          "text": "‚ÄúMake this my breakfast for tomorrow‚Äù"
                        }
                      }
                    },
                    {
                      "label": "‚ÄúGive me a grocery list‚Äù   - ",
                      "value": {
                        "input": {
                          "text": "‚ÄúGive me a grocery list‚Äù   - "
                        }
                      }
                    },
                    {
                      "label": "\"Show nutrition details‚Äù",
                      "value": {
                        "input": {
                          "text": "\"Show nutrition details‚Äù"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_49462",
              "max_tries": 3
            },
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_496",
            "next_step": "step_260"
          },
          {
            "step": "step_260",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Moong dal chilla with paneer filling + mint chutney  or\n\nGreek yogurt with chia seeds, almonds, and berries"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": true
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 1,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "Moong dal chilla with paneer filling + mint chutney"
                  }
                },
                "fallback_option": {
                  "label": "Greek yogurt with chia seeds, almonds, and berries  "
                }
              },
              "source_variable": {
                "variable": "step_496"
              }
            },
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_329"
                },
                {
                  "variable": "step_184"
                },
                {
                  "variable": "step_921"
                },
                {
                  "variable": "step_896"
                },
                {
                  "variable": "step_710"
                },
                {
                  "variable": "step_496"
                }
              ]
            },
            "variable": "step_260",
            "condition": {
              "eq": [
                {
                  "variable": "step_496"
                },
                {
                  "value": "‚ÄúMake this my breakfast for tomorrow‚Äù",
                  "from_entity": "entity_49462"
                }
              ]
            },
            "next_step": "step_219"
          },
          {
            "step": "step_219",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sure! I‚Äôll generate a grocery list based on your current meal plan and preferences.\nHere‚Äôs your customized **weekly grocery list**:$üçé **Fruits**\n\n\n  - Bananas\n  - Berries (blueberries/strawberries)\n  - Apples\n  - Papaya\n\nüåæ **Grains & Pulses**\n\n\n  - Brown rice\n  - Rolled oats\n\nüõí **Proteins**\n\n\n  - Moong dal (500g)\n  - Tofu (2 blocks)$\n\nü•¶ **Vegetables**\n\n\n  - Spinach\n  -"
                          },
                          {
                            "scalar": " Bell peppers (red/yellow)\n  - Tomatoes"
                          },
                          {
                            "skill_variable": "assist"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_219",
            "condition": {
              "eq": [
                {
                  "variable": "step_496"
                },
                {
                  "value": "‚ÄúGive me a grocery list‚Äù   - ",
                  "from_entity": "entity_49462"
                }
              ]
            },
            "next_step": "step_910"
          },
          {
            "step": "step_910",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here‚Äôs the **nutrition breakdown** for your selected meal:\n\nüîπ **Moong Dal Chilla with Paneer** (1 serving)\n\n\n  - **Calories**: 280 kcal\n  - **Protein**: 18g\n  - **Carbohydrates**: 22g\n  - **Fat**: 10g\n  - **Fiber**: 4g\n  - **Calcium**: High\n  - **Iron**: Moderate"
                          },
                          {
                            "system_variable": "now"
                          },
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "assist"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_910",
            "condition": {
              "eq": [
                {
                  "variable": "step_496"
                },
                {
                  "value": "\"Show nutrition details‚Äù",
                  "from_entity": "entity_49462"
                }
              ]
            }
          }
        ],
        "title": "nutri agent",
        "action": "action_23408",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_23408_intent_36527"
        },
        "variables": [
          {
            "title": "I‚Äôm lactose intolerant and have mild PCOS. Thank you for sharing",
            "privacy": {
              "enabled": false
            },
            "variable": "step_184",
            "data_type": "yes_no"
          },
          {
            "title": "Sure! I‚Äôll generate a grocery list based on your current meal pl",
            "privacy": {
              "enabled": false
            },
            "variable": "step_219",
            "data_type": "any"
          },
          {
            "title": "Moong dal chilla with paneer filling + mint chutney or Greek yog",
            "privacy": {
              "enabled": false
            },
            "variable": "step_260",
            "data_type": "any"
          },
          {
            "title": "üëã Hello! I‚Äôm your AI Nutrition Assistant, here to help you eat ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_275",
            "data_type": "any"
          },
          {
            "title": "üß† ***Got it! To personalize your plan, I need a few quick detai",
            "privacy": {
              "enabled": false
            },
            "variable": "step_329",
            "data_type": "any"
          },
          {
            "title": "<br /> |‚ÄúThat lunch was too heavy.‚Äù ‚ÄúI didn‚Äôt like the tofu dish",
            "privacy": {
              "enabled": false
            },
            "variable": "step_330",
            "data_type": "yes_no"
          },
          {
            "title": "Great! I‚Äôll help you create a personalized meal plan. To get sta",
            "privacy": {
              "enabled": false
            },
            "variable": "step_480",
            "data_type": "any"
          },
          {
            "title": "### **End or Loop** ``` üîÅ Would you like to add this to your me",
            "privacy": {
              "enabled": false
            },
            "variable": "step_496",
            "data_type": "any"
          },
          {
            "title": "**Suggest me a high-protein breakfast‚Äù**",
            "privacy": {
              "enabled": false
            },
            "variable": "step_602",
            "data_type": "any"
          },
          {
            "title": "Thanks for letting me know. I‚Äôll make sure to avoid all dairy-ba",
            "privacy": {
              "enabled": false
            },
            "variable": "step_603",
            "data_type": "any"
          },
          {
            "title": "**Do you have any medical conditions or allergies?**",
            "privacy": {
              "enabled": false
            },
            "variable": "step_688",
            "data_type": "any"
          },
          {
            "title": "I love Indian food, but I don‚Äôt like mushrooms or eggplant.{vari",
            "privacy": {
              "enabled": false
            },
            "variable": "step_710",
            "data_type": "yes_no"
          },
          {
            "title": "I‚Äôm 22 years old and female. Thanks! Got it ‚Äî a 22-year-old fema",
            "privacy": {
              "enabled": false
            },
            "variable": "step_767",
            "data_type": "any"
          },
          {
            "title": "My goal is weight loss and improving energy levels. Great! I‚Äôll ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_896",
            "data_type": "yes_no"
          },
          {
            "title": "Here‚Äôs the **nutrition breakdown** for your selected meal: üîπ **",
            "privacy": {
              "enabled": false
            },
            "variable": "step_910",
            "data_type": "any"
          },
          {
            "title": "I prefer vegetarian meals, and I avoid gluten. Understood! I‚Äôll ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_921",
            "data_type": "yes_no"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "display_name": "NUTRITION ASSISTANT",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1",
                "ignore_end_action_steps": false
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "type": "standard",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "type": "standard",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_23408",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "I would like to speak to someone"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Agent help"
          }
        ],
        "description": "Please transfer me to an agent"
      },
      {
        "intent": "action_23408_intent_36527",
        "examples": [
          {
            "text": "nutri assistant"
          },
          {
            "text": "nutri agent"
          }
        ]
      }
    ],
    "entities": [
      {
        "entity": "entity_34298",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "\"^(?:.*[a-z])(?:.*[A-Z])(?:.*\\d)(?:.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\""
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-time",
        "values": []
      },
      {
        "entity": "sys-currency",
        "values": []
      },
      {
        "entity": "entity_27230",
        "values": [
          {
            "type": "synonyms",
            "value": "‚ÄúI want a meal plan‚Äù ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "\"Feedback on Meal\"",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "\" How can I help you today?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "\"I have lactose intolerance‚Äùn ",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_30991",
        "values": [
          {
            "type": "synonyms",
            "value": "Do you have any medical conditions or allergies?  ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What is your age and gender? ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Any specific cuisines or ingredients to include or avoid?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What are your food preferences (e.g., vegetarian, gluten-free)?",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_16338",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "To personalize your plan, I need a few quick details:"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_17250",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "\"^(?:.*[a-z])(?:.*[A-Z])(?:.*\\d)(?:.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\""
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-date",
        "values": []
      },
      {
        "entity": "entity_24418",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_22177",
        "values": [
          {
            "type": "synonyms",
            "value": "What is your age and gender? ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What are your food preferences (e.g., vegetarian, gluten-free)?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Any specific cuisines or ingredients to include or avoid?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Do you have any medical conditions or allergies?  ",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_7566",
        "values": [
          {
            "type": "synonyms",
            "value": "Scrambled tofu with vegetables  1 slice multigrain toast",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Moong dal cheela (Indian lentil pancakes)  Mint chutney",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Greek yogurt (lactose-free)  Chia seeds, flaxseeds, and walnuts",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_25899",
        "values": [
          {
            "type": "patterns",
            "value": "Email",
            "patterns": [
              "\\b(?:[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_42565",
        "values": [
          {
            "type": "patterns",
            "value": "Regular_expression",
            "patterns": [
              "To personalize your plan, I need a few quick details:"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_49462",
        "values": [
          {
            "type": "synonyms",
            "value": "‚ÄúGive me a grocery list‚Äù   - ",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "‚ÄúMake this my breakfast for tomorrow‚Äù",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "\"Show nutrition details‚Äù",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-yes-no",
        "values": []
      },
      {
        "entity": "entity_19645",
        "values": [
          {
            "type": "synonyms",
            "value": "Checking account",
            "synonyms": [
              "Checking"
            ]
          },
          {
            "type": "synonyms",
            "value": "Savings account",
            "synonyms": [
              "Savings"
            ]
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-percentage",
        "values": []
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-number",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 5,
          "intents": 2,
          "entities": 20,
          "data_types": 3,
          "collections": 0,
          "global_variables": 4
        }
      }
    },
    "variables": [
      {
        "title": "assist",
        "privacy": {
          "enabled": false
        },
        "variable": "assist",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "nutrition",
        "privacy": {
          "enabled": true
        },
        "variable": "nutrition",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "personalise",
        "privacy": {
          "enabled": false
        },
        "variable": "personalise",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "ques",
        "privacy": {
          "enabled": false
        },
        "variable": "ques",
        "data_type": "string",
        "description": ""
      }
    ],
    "data_types": [
      {
        "title": "core",
        "entity": "entity_22177",
        "response": {
          "options": [
            {
              "label": "What is your age and gender? ",
              "value": {
                "input": {
                  "text": "What is your age and gender? "
                }
              }
            },
            {
              "label": "Do you have any medical conditions or allergies?  ",
              "value": {
                "input": {
                  "text": "Do you have any medical conditions or allergies?  "
                }
              }
            },
            {
              "label": "What are your food preferences (e.g., vegetarian, gluten-free)?",
              "value": {
                "input": {
                  "text": "What are your food preferences (e.g., vegetarian, gluten-free)?"
                }
              }
            },
            {
              "label": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? ",
              "value": {
                "input": {
                  "text": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? "
                }
              }
            },
            {
              "label": "Any specific cuisines or ingredients to include or avoid?",
              "value": {
                "input": {
                  "text": "Any specific cuisines or ingredients to include or avoid?"
                }
              }
            }
          ],
          "response_type": "option"
        },
        "data_type": "data-type_24624"
      },
      {
        "title": "core",
        "entity": "entity_30991",
        "response": {
          "options": [
            {
              "label": "What is your age and gender? ",
              "value": {
                "input": {
                  "text": "What is your age and gender? "
                }
              }
            },
            {
              "label": "Do you have any medical conditions or allergies?  ",
              "value": {
                "input": {
                  "text": "Do you have any medical conditions or allergies?  "
                }
              }
            },
            {
              "label": "What are your food preferences (e.g., vegetarian, gluten-free)?",
              "value": {
                "input": {
                  "text": "What are your food preferences (e.g., vegetarian, gluten-free)?"
                }
              }
            },
            {
              "label": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? ",
              "value": {
                "input": {
                  "text": "What‚Äôs your goal ‚Äì weight loss, muscle gain, balanced diet? "
                }
              }
            },
            {
              "label": "Any specific cuisines or ingredients to include or avoid?",
              "value": {
                "input": {
                  "text": "Any specific cuisines or ingredients to include or avoid?"
                }
              }
            }
          ],
          "response_type": "option"
        },
        "data_type": "data-type_38722"
      },
      {
        "title": "details",
        "entity": "entity_16338",
        "data_type": "data-type_6897"
      }
    ],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "date": {
            "pattern": "full"
          },
          "time": {
            "pattern": "short"
          },
          "number": {
            "delimiter": "."
          },
          "currency": {
            "symbol": "default",
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "hap_filter": {
          "output": {
            "enabled": true
          }
        },
        "slot_filling": {
          "enabled": true
        },
        "general_purpose_answering": {
          "enabled": false
        }
      },
      "default_locale": "en-US",
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant 367d6533-0707-47a0-b938-b4a15a523606",
  "dialog_settings": {
    "source_assistant": "b1fe2a31-b441-44c0-b161-792240877de0"
  },
  "created": "2025-08-04T18:08:08.763Z",
  "updated": "2025-08-04T18:08:08.763Z",
  "snapshot": "1",
  "assistant_id": "367d6533-0707-47a0-b938-b4a15a523606",
  "assistant_references": [
    {
      "name": "Nutrition Agent",
      "assistant_id": "b1fe2a31-b441-44c0-b161-792240877de0",
      "skill_reference": "actions skill"
    }
  ]
}